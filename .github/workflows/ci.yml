name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
        scope: '@redux-ai'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.15.9
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Configure npm authentication
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        echo "registry=https://registry.npmjs.org/" >> .npmrc
        echo "always-auth=true" >> .npmrc
        echo "@redux-ai:registry=https://registry.npmjs.org/" >> .npmrc

    - name: Install dependencies
      shell: bash
      run: pnpm install --no-frozen-lockfile
      env:
        PNPM_HOME: ${{ github.workspace }}/.pnpm
        NPM_CONFIG_USERCONFIG: ${{ github.workspace }}/.npmrc
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Build packages first
      run: |
        pnpm run -r --filter="./packages/*" build
      env:
        PNPM_HOME: ${{ github.workspace }}/.pnpm
        NPM_CONFIG_USERCONFIG: ${{ github.workspace }}/.npmrc
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Build and test all
      run: |
        pnpm build
        pnpm run -r lint
        pnpm run -r test
      env:
        PNPM_HOME: ${{ github.workspace }}/.pnpm
        NPM_CONFIG_USERCONFIG: ${{ github.workspace }}/.npmrc

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          scope: '@redux-ai'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc
          echo "@redux-ai:registry=https://registry.npmjs.org/" >> .npmrc

      - name: Install dependencies
        shell: bash
        run: pnpm install --no-frozen-lockfile
        env:
          PNPM_HOME: ${{ github.workspace }}/.pnpm
          NPM_CONFIG_USERCONFIG: ${{ github.workspace }}/.npmrc
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build packages first
        run: |
          pnpm run -r --filter="./packages/*" build
        env:
          PNPM_HOME: ${{ github.workspace }}/.pnpm
          NPM_CONFIG_USERCONFIG: ${{ github.workspace }}/.npmrc
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version and publish packages
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm changeset publish
          commit: "chore: version packages"
          title: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PNPM_HOME: ${{ github.workspace }}/.pnpm
          NPM_CONFIG_USERCONFIG: ${{ github.workspace }}/.npmrc
          NPM_CONFIG_REGISTRY: "https://registry.npmjs.org"
          npm_config_loglevel: verbose